<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head') %>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="/css/dashboard-quiz.css">
</head>

<body>
    <%- include('./partials/header') %>

    <main id="dashboard-content">
        <!-- Welcome Section -->
        <section class="dashboard-welcome">
            <div class="container">
                <div class="welcome-header">
                    <div class="welcome-content">
                        <h1 id="welcome-message">Welcome to Your learnSign Dashboard</h1>
                        <p>Track your progress and continue your sign language learning journey</p>
                    </div>
                    <div class="dashboard-stats">
                        <div class="stat-item">
                            <div class="stat-icon">üìö</div>
                            <div class="stat-info">
                                <span class="stat-number" id="completed-courses">0</span>
                                <span class="stat-label">Courses Completed</span>
                            </div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-icon">‚è±Ô∏è</div>
                            <div class="stat-info">
                                <span class="stat-number" id="weekly-minutes">0</span>
                                <span class="stat-label">Minutes This Week</span>
                            </div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-icon">üî•</div>
                            <div class="stat-info">
                                <span class="stat-number" id="current-streak">0</span>
                                <span class="stat-label">Day Streak</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>



        <!-- Detailed Progress Section -->
        <section class="learning-progress">
            <div class="container">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
                    <h2>üìà Your Learning Progress</h2>
                    <button onclick="loadDashboardData()" style="padding: 0.8rem 1.5rem; background: #7C6FDB; color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 600;">
                        üîÑ Refresh Data
                    </button>
                </div>
                
                <!-- Overall Progress -->
                <div class="progress-overview">
                    <div class="progress-main-card">
                        <div class="progress-header">
                            <h3>Overall Learning Progress</h3>
                            <span class="progress-percentage" id="overall-percentage">0%</span>
                        </div>
                        <div class="progress-bar-large">
                            <div class="progress-fill" id="overall-progress" style="width: 0%"></div>
                        </div>
                        <div class="progress-details">
                            <div class="detail-item">
                                <span class="detail-label">Lessons Completed:</span>
                                <span class="detail-value" id="lessons-completed">0 / 50</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Time Spent Learning:</span>
                                <span class="detail-value" id="time-spent">0 hours</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Last Activity:</span>
                                <span class="detail-value" id="last-activity">Get started today!</span>
                            </div>
                        </div>
                    </div>
                </div>



                <!-- Quiz Performance -->
                <div class="quiz-performance">
                    <h3>üéØ Quiz Performance</h3>
                    <div class="quiz-stats-grid">
                        <div class="quiz-stat-card">
                            <div class="quiz-stat-icon">üìù</div>
                            <div class="quiz-stat-content">
                                <span class="quiz-stat-number" id="quiz-attempts">0</span>
                                <span class="quiz-stat-label">Quizzes Taken</span>
                            </div>
                        </div>
                        <div class="quiz-stat-card">
                            <div class="quiz-stat-icon">‚≠ê</div>
                            <div class="quiz-stat-content">
                                <span class="quiz-stat-number" id="avg-quiz-score">0%</span>
                                <span class="quiz-stat-label">Average Score</span>
                            </div>
                        </div>
                        <div class="quiz-stat-card">
                            <div class="quiz-stat-icon">‚úÖ</div>
                            <div class="quiz-stat-content">
                                <span class="quiz-stat-number" id="quiz-pass-rate">0%</span>
                                <span class="quiz-stat-label">Pass Rate</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="recent-activity">
                    <h3>üìã Recent Activity</h3>
                    <div class="activity-list" id="recent-activity-list">
                        <div class="activity-item placeholder">
                            <div class="activity-icon">üéØ</div>
                            <div class="activity-content">
                                <p>Start your first lesson to see your activity here!</p>
                                <span class="activity-time">Ready to begin</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Quick Actions -->
        <section class="quick-actions">
            <div class="container">
                <h2>üöÄ Quick Actions</h2>
                <div class="actions-grid">
                    <a href="/tutorials" class="action-card">
                        <div class="action-icon">üìπ</div>
                        <h3>Start with Tutorials</h3>
                        <p>Basic introduction videos</p>
                    </a>
                    <a href="/quiz" class="action-card">
                        <div class="action-icon">üß†</div>
                        <h3>Take a Quiz</h3>
                        <p>Test your knowledge</p>
                    </a>
                    <a href="/translate" class="action-card">
                        <div class="action-icon">ü§ù</div>
                        <h3>Try Translator</h3>
                        <p>Practice real-time translation</p>
                    </a>
                    <a href="/community" class="action-card">
                        <div class="action-icon">üë•</div>
                        <h3>Join Community</h3>
                        <p>Connect with other learners</p>
                    </a>
                </div>
            </div>
        </section>
    </main>

    <%- include('./partials/footer') %>

    <script>
        // Enroll in package
        function enrollInPackage(packageId) {
            // In a real app, this would handle enrollment
            alert(`Enrolling in package: ${packageId}. This would redirect to the course content!`);
            
            // For now, redirect to courses
            window.location.href = '/courses';
        }

        // Preview category
        function previewCategory(categoryId) {
            // Show a quick preview modal or redirect
            alert(`This would show a quick preview of the ${categoryId} age group courses!`);
        }

        // Add smooth scrolling for internal links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // Fetch comprehensive analytics
        async function loadDashboardData() {
            try {
                const userId = localStorage.getItem('userId');
                console.log('Loading dashboard for userId:', userId);
                
                if (!userId) {
                    console.error('No userId found in localStorage');
                    console.log('Available localStorage keys:', Object.keys(localStorage));
                    alert('Please log in again to see your dashboard data');
                    return;
                }
                
                // Fetch summary analytics
                const res = await fetch(`/api/analytics/summary/${userId}`);
                if (!res.ok) {
                    console.error('Failed to fetch analytics:', res.status);
                    return;
                }
                
                const data = await res.json();
                console.log('Dashboard data:', data);
                
                // Update top stats
                document.getElementById('completed-courses').textContent = data.totalCompleted || 0;
                document.getElementById('weekly-minutes').textContent = data.weeklyMinutes || 0;
                document.getElementById('current-streak').textContent = data.currentStreak || 0;
                
                // Update overall progress
                const completionPct = data.completionPct || 0;
                document.getElementById('overall-percentage').textContent = `${completionPct}%`;
                document.getElementById('overall-progress').style.width = `${completionPct}%`;
                
                // Update lessons completed
                const totalCourses = data.coursesInProgress + data.totalCompleted;
                document.getElementById('lessons-completed').textContent = `${data.totalCompleted} / ${totalCourses}`;
                
                // Update time spent (convert minutes to hours if > 60)
                const minutes = data.weeklyMinutes || 0;
                const timeText = minutes >= 60 
                    ? `${Math.floor(minutes / 60)}h ${minutes % 60}m` 
                    : `${minutes} min`;
                document.getElementById('time-spent').textContent = timeText;
                
                // Update quiz stats
                document.getElementById('quiz-attempts').textContent = data.quizAttempts || 0;
                document.getElementById('avg-quiz-score').textContent = `${data.avgQuiz || 0}%`;
                document.getElementById('quiz-pass-rate').textContent = `${data.quizPassRate || 0}%`;
                
                // Fetch and display recent activity
                await loadRecentActivity(userId);
                
            } catch (error) {
                console.error('Error loading dashboard data:', error);
            }
        }
        
        // Fetch recent learning events
        async function loadRecentActivity(userId) {
            try {
                const res = await fetch(`/api/admin/learning-events/${userId}`);
                if (!res.ok) return;
                
                const events = await res.json();
                const activityList = document.getElementById('recent-activity-list');
                
                if (!events || events.length === 0) {
                    return; // Keep placeholder
                }
                
                // Clear placeholder
                activityList.innerHTML = '';
                
                // Show last 5 events
                events.slice(0, 5).forEach(event => {
                    const item = document.createElement('div');
                    item.className = 'activity-item';
                    
                    const icon = event.type === 'start' ? '‚ñ∂Ô∏è' : 
                                event.type === 'end' ? '‚úÖ' : 
                                event.type === 'pause' ? '‚è∏Ô∏è' : 'üìπ';
                    
                    const timeAgo = getTimeAgo(new Date(event.ts));
                    const minutes = Math.round(event.activeMs / 60000);
                    
                    item.innerHTML = `
                        <div class="activity-icon">${icon}</div>
                        <div class="activity-content">
                            <p>${event.type.charAt(0).toUpperCase() + event.type.slice(1)} learning session${minutes > 0 ? ` (${minutes} min)` : ''}</p>
                            <span class="activity-time">${timeAgo}</span>
                        </div>
                    `;
                    activityList.appendChild(item);
                });
                
            } catch (error) {
                console.error('Error loading recent activity:', error);
            }
        }
        
        // Helper function to format time ago
        function getTimeAgo(date) {
            const seconds = Math.floor((new Date() - date) / 1000);
            if (seconds < 60) return 'Just now';
            const minutes = Math.floor(seconds / 60);
            if (minutes < 60) return `${minutes} min ago`;
            const hours = Math.floor(minutes / 60);
            if (hours < 24) return `${hours} hour${hours > 1 ? 's' : ''} ago`;
            const days = Math.floor(hours / 24);
            return `${days} day${days > 1 ? 's' : ''} ago`;
        }
        
        // Load dashboard data on page load
        loadDashboardData();

        // Add animation on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe all cards for animation
        document.querySelectorAll('.package-card, .category-card, .progress-card, .action-card').forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });
    </script>
</body>
</html>
